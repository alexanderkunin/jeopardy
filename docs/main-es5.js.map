{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/announcement/announcement.component.html","webpack:///src/app/app.component.html","webpack:///src/app/question-grid/question-grid.component.html","webpack:///src/app/question-viewer/question-viewer.component.html","webpack:///src/app/announcement/announcement.component.scss","webpack:///src/app/announcement/announcement.component.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.scss","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/app.routes.ts","webpack:///src/app/model/Question.ts","webpack:///src/app/model/Team.ts","webpack:///src/app/question-grid/question-grid.component.scss","webpack:///src/app/question-grid/question-grid.component.ts","webpack:///src/app/question-viewer/question-viewer.component.scss","webpack:///src/app/question-viewer/question-viewer.component.ts","webpack:///src/app/services/questions.service.ts","webpack:///src/app/services/team.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AnnouncementComponent","teams","score","winningTeam","Input","Component","selector","template","routes","ROUTES","AppRoutingModule","NgModule","imports","RouterModule","forRoot","AppComponent","teamServiceService","title","TeamService","AppModule","declarations","QuestionGridComponent","QuestionViewerComponent","BrowserModule","FlexLayoutModule","HttpClientModule","providers","bootstrap","path","component","Question","body","answer","points","color","activated","Team","name","sugar","congrats","teamService","questions","Array","event","Subject","init","subscribe","question","changeTurn","questionSelected","noOfQestions","getNumberOfQuestions","getCurrentTeam","reset","getTeams","categories","getCategories","i","length","cat","j","next","QuestionsService","http","get","HttpClient","Injectable","providedIn","questionService","numberOfQuestions","localStorage","getItem","JSON","parse","q","turn","p","reject","getQuestionsInCategories","cats","setItem","stringify","toString","error","current","sugar1","sugar2","saveState","environment","production","enableProdMode","platformBrowserDynamic","bootstrapModule","err","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<div *ngIf=\\\"teams[0].sugar <= 7 || teams[1].sugar <= 7; else nicetry\\\">\\n  <div class='announcement normal'>\\n    Good Job!\\n  </div>\\n</div>\\n<ng-template #nicetry>\\n  <div class='announcement high'>\\n    Nice Try!\\n  </div>\\n</ng-template>\\n<div class='announcement' *ngIf=\\\"winningTeam\\\">\\n  <div style='font-size: 5vh'>\\n    {{winningTeam.name}} wins!\\n  </div>\\n  <div>\\n    Score {{winningTeam.score}} points and blood sugar {{winningTeam.sugar |  number :'1.1-1'}} mmol/L\\n  </div>\\n</div>\\n<div class='announcement' *ngIf=\\\"winningTeam == null\\\">\\n  <div style='font-size: 5vh'>\\n    Both teams win!\\n  </div>\\n  <div>\\n    Score {{teams[0].score}} points and blood sugar {{teams[0].sugar |  number :'1.1-1'}} mmol/L\\n  </div>\\n</div>\\n\";","export default \"<div style='min-width: 800px;'>\\r\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\">\\r\\n    <div style=' padding: 15px; color: blue; font-weight: 900; font-size: 5vh; text-align: center;'>Jeopardy\\r\\n    </div>\\r\\n  </div>\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\\r\\n\";","export default \"<div class=\\\"container-fluid\\\">\\n\\n  <div class=\\\"container-fluid\\\" style='width: 100%;'>\\n    <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around center\\\">\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center start\\\">\\n        <div class='team' [ngClass]=\\\"teams[0].congrats ? 'shake' : ''\\\">\\n          {{teams[0].name}}: <span [ngClass]=\\\"teams[0].sugar > 7 ? 'high' : 'normal'\\\">\\n            {{teams[0].sugar |  number :'1.1-1'}} mmol/L\\n          </span>\\n        </div>\\n        <div style='width: 35vw; text-align: center;'>\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)='resetGame()'>Reset</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)='completeGame()'>Complete</button>\\n        </div>\\n        <div class='team' [ngClass]=\\\"teams[1].congrats ? 'shake' : ''\\\">\\n          {{teams[1].name}}: <span [ngClass]=\\\"teams[1].sugar > 7 ? 'high' : 'normal'\\\">\\n            {{teams[1].sugar | number :'1.1-1'  }} mmol/L\\n          </span>\\n        </div>\\n      </div>\\n      <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row justify-content-md-center\\\">\\n          <div class=\\\"col monitoring\\\">\\n            Monitoring\\n          </div>\\n          <div class=\\\"col targets\\\">\\n            Targets\\n          </div>\\n          <div class=\\\"col nutrition\\\">\\n            Nutrition\\n          </div>\\n          <div class=\\\"col exercise\\\">\\n            Exercise\\n          </div>\\n          <div class=\\\"col complications\\\">\\n            Complications\\n          </div>\\n          <div class=\\\"col bonus\\\">\\n            True or False\\n          </div>\\n        </div>\\n        <div class=\\\"row justify-content-md-center\\\" *ngFor=\\\"let qs of questions\\\">\\n          <div (click)='onSelect(q)' class=\\\"col\\\" [ngClass]='q.activated ? q.color : \\\"disabled\\\"' *ngFor=\\\"let q of qs\\\">\\n            <div [ngClass]='q === questionSelected ? \\\"selected\\\" : \\\"\\\"'>\\n              {{q.points}}\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <app-question-viewer [question]='questionSelected' [event]='event' [team]='currentTeam()' style='width: 100%;'>\\n      </app-question-viewer>\\n\\n      <div *ngIf=\\\"noOfQestions === 0\\\" style='padding-top: 15vh;'>\\n        <app-announcement [teams]='teams'></app-announcement>\\n      </div>\\n    </div>\\n\\n  </div>\\n  <div class='footer'>Copyright &copy; 2019 Alexander Kunin. All Rights Reserved.</div>\\n\";","export default \"<div *ngIf=\\\"!!question\\\" class='question-viewer'>\\r\\n  <div style='height: 2vh;'></div>\\r\\n  <div [ngClass]=\\\"question.color\\\" fxLayout='column' fxLayoutAlign=\\\"space-between center\\\"\\r\\n    style='height: 30vh; padding: 10px; text-align: center; border-radius: 3vh;'>\\r\\n    <div>{{team.name}}</div>\\r\\n    <div>{{question.body}}</div>\\r\\n    <div></div>\\r\\n  </div>\\r\\n  <div fxLayout='row' fxLayoutAlign=\\\"center end\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)='onNo()'>No</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)='onYes()'>Yes</button>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \".announcement {\\n  font-size: 3vh;\\n  font-weight: 600;\\n  min-width: 700px;\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYW5ub3VuY2VtZW50L2Fubm91bmNlbWVudC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQUE7RUFDQSxnQkFBQTtFQUNBLGdCQUFBO0VBQ0Esa0JBQUE7QUFDRiIsImZpbGUiOiJzcmMvYXBwL2Fubm91bmNlbWVudC9hbm5vdW5jZW1lbnQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYW5ub3VuY2VtZW50IHtcclxuICBmb250LXNpemU6IDN2aDtcclxuICBmb250LXdlaWdodDogNjAwO1xyXG4gIG1pbi13aWR0aDogNzAwcHg7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcbiJdfQ== */\";","import { Team } from './../model/Team';\nimport { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-announcement',\n  templateUrl: './announcement.component.html',\n  styleUrls: ['./announcement.component.scss']\n})\nexport class AnnouncementComponent implements OnInit {\n  @Input() teams: Team[];\n  winningTeam: Team;\n\n  constructor() { }\n\n  ngOnInit() {\n    if (this.teams[0].score > this.teams[1].score) {\n      this.winningTeam = this.teams[0];\n    } else if (this.teams[0].score < this.teams[1].score) {\n      this.winningTeam = this.teams[1];\n    } else {\n      this.winningTeam = null;\n    }\n  }\n}\n","import { ROUTES } from './app.routes';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = ROUTES;\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component } from '@angular/core';\nimport { TeamService } from './services/team.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Jeopardy';\n\n  constructor(private teamServiceService: TeamService) {\n  }\n}\n","import { QuestionsService } from './services/questions.service';\nimport { TeamService } from './services/team.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { QuestionGridComponent } from './question-grid/question-grid.component';\nimport { QuestionViewerComponent } from './question-viewer/question-viewer.component';\nimport { AnnouncementComponent } from './announcement/announcement.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    QuestionGridComponent,\n    QuestionViewerComponent,\n    AnnouncementComponent\n  ],\n  imports: [\n    BrowserModule,\n    FlexLayoutModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [\n    TeamService\n  ],\n  bootstrap: [\n    AppComponent\n  ]\n})\nexport class AppModule { }\n","import { Routes } from '@angular/router';\r\nimport { QuestionGridComponent } from './question-grid/question-grid.component';\r\n\r\nexport const ROUTES: Routes = [\r\n  { path: '**', component: QuestionGridComponent },\r\n];\r\n","export class Question {\n  body: string;\n  answer: string;\n  points: number;\n  activated: boolean;\n  color: string;\n\n  constructor(\n    body: string,\n    answer: string,\n    points: number,\n    color: string,\n    activated: boolean\n  ) {\n    this.body = body;\n    this.answer = answer;\n    this.points = points;\n    this.color = color;\n    this.activated = activated;\n  }\n}\n","export class Team {\n  name: string;\n  score = 0;\n  sugar = 10.0;\n  congrats = false;\n\n  constructor(name: string) {\n    this.name = name;\n  }\n}\n","export default \".row {\\n  height: 5vh;\\n}\\n\\n.col {\\n  border: solid 1px #555050;\\n  border-radius: 30px;\\n  margin: 2px;\\n  text-align: center;\\n  font-size: 3vh;\\n  font-weight: 400;\\n  cursor: pointer;\\n}\\n\\n.selected {\\n  font-weight: 600;\\n  font-size: 3vh;\\n  color: #1eff00;\\n  cursor: default;\\n}\\n\\n.disabled {\\n  color: #616060;\\n  cursor: default;\\n}\\n\\n.footer {\\n  background-color: #e9e5e5;\\n  position: fixed;\\n  height: 30px;\\n  text-align: center;\\n  padding-top: 4px;\\n  bottom: 0;\\n  width: 100%;\\n  font-family: \\\"Caveat\\\", cursive;\\n}\\n\\n.shake {\\n  background: linear-gradient(90deg, #00000000 30%, green 50%, #00000000 70%);\\n  background-size: 400% 400%;\\n  -webkit-animation: AnimationName 2s ease infinite;\\n  animation: AnimationName 5s ease infinite;\\n}\\n\\n@-webkit-keyframes AnimationName {\\n  0% {\\n    background-position: 100% 100%;\\n  }\\n  100% {\\n    background-position: 0% 0%;\\n  }\\n}\\n\\n@keyframes AnimationName {\\n  0% {\\n    background-position: 100% 100%;\\n  }\\n  100% {\\n    background-position: 0% 0%;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcXVlc3Rpb24tZ3JpZC9xdWVzdGlvbi1ncmlkLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBQTtBQUNGOztBQUVBO0VBQ0UseUJBQUE7RUFDQSxtQkFBQTtFQUNBLFdBQUE7RUFDQSxrQkFBQTtFQUNBLGNBQUE7RUFDQSxnQkFBQTtFQUNBLGVBQUE7QUFDRjs7QUFFQTtFQUNFLGdCQUFBO0VBQ0EsY0FBQTtFQUNBLGNBQUE7RUFDQSxlQUFBO0FBQ0Y7O0FBRUE7RUFDRSxjQUFBO0VBQ0EsZUFBQTtBQUNGOztBQUVBO0VBQ0UseUJBQUE7RUFDQSxlQUFBO0VBQ0EsWUFBQTtFQUNBLGtCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxTQUFBO0VBQ0EsV0FBQTtFQUNBLDhCQUFBO0FBQ0Y7O0FBRUE7RUFDRSwyRUFBQTtFQUNBLDBCQUFBO0VBQ0EsaURBQUE7RUFFQSx5Q0FBQTtBQUNGOztBQUVBO0VBQ0U7SUFDRSw4QkFBQTtFQUNGO0VBQ0E7SUFDRSwwQkFBQTtFQUNGO0FBQ0Y7O0FBU0E7RUFDRTtJQUNFLDhCQUFBO0VBQ0Y7RUFDQTtJQUNFLDBCQUFBO0VBQ0Y7QUFDRiIsImZpbGUiOiJzcmMvYXBwL3F1ZXN0aW9uLWdyaWQvcXVlc3Rpb24tZ3JpZC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5yb3cge1xyXG4gIGhlaWdodDogNXZoO1xyXG59XHJcblxyXG4uY29sIHtcclxuICBib3JkZXI6IHNvbGlkIDFweCAjNTU1MDUwO1xyXG4gIGJvcmRlci1yYWRpdXM6IDMwcHg7XHJcbiAgbWFyZ2luOiAycHg7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGZvbnQtc2l6ZTogM3ZoO1xyXG4gIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG4uc2VsZWN0ZWQge1xyXG4gIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgZm9udC1zaXplOiAzdmg7XHJcbiAgY29sb3I6ICMxZWZmMDA7XHJcbiAgY3Vyc29yOiBkZWZhdWx0O1xyXG59XHJcblxyXG4uZGlzYWJsZWQge1xyXG4gIGNvbG9yOiAjNjE2MDYwO1xyXG4gIGN1cnNvcjogZGVmYXVsdDtcclxufVxyXG5cclxuLmZvb3RlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2U5ZTVlNTtcclxuICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgaGVpZ2h0OiAzMHB4O1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBwYWRkaW5nLXRvcDogNHB4O1xyXG4gIGJvdHRvbTogMDtcclxuICB3aWR0aDogMTAwJTtcclxuICBmb250LWZhbWlseTogXCJDYXZlYXRcIiwgY3Vyc2l2ZTtcclxufVxyXG5cclxuLnNoYWtlIHtcclxuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoOTBkZWcsICMwMDAwMDAwMCAzMCUsIGdyZWVuIDUwJSwgIzAwMDAwMDAwIDcwJSk7XHJcbiAgYmFja2dyb3VuZC1zaXplOiA0MDAlIDQwMCU7XHJcbiAgLXdlYmtpdC1hbmltYXRpb246IEFuaW1hdGlvbk5hbWUgMnMgZWFzZSBpbmZpbml0ZTtcclxuICAtbW96LWFuaW1hdGlvbjogQW5pbWF0aW9uTmFtZSAycyBlYXNlIGluZmluaXRlO1xyXG4gIGFuaW1hdGlvbjogQW5pbWF0aW9uTmFtZSA1cyBlYXNlIGluZmluaXRlO1xyXG59XHJcblxyXG5ALXdlYmtpdC1rZXlmcmFtZXMgQW5pbWF0aW9uTmFtZSB7XHJcbiAgMCUge1xyXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMTAwJSAxMDAlO1xyXG4gIH1cclxuICAxMDAlIHtcclxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IDAlIDAlO1xyXG4gIH1cclxufVxyXG5ALW1vei1rZXlmcmFtZXMgQW5pbWF0aW9uTmFtZSB7XHJcbiAgMCUge1xyXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMTAwJSAxMDAlO1xyXG4gIH1cclxuICAxMDAlIHtcclxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IDAlIDAlO1xyXG4gIH1cclxufVxyXG5Aa2V5ZnJhbWVzIEFuaW1hdGlvbk5hbWUge1xyXG4gIDAlIHtcclxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IDEwMCUgMTAwJTtcclxuICB9XHJcbiAgMTAwJSB7XHJcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwJSAwJTtcclxuICB9XHJcbn1cclxuIl19 */\";","import { TeamService as TeamService } from '../services/team.service';\nimport { Subject } from 'rxjs';\nimport { Question } from './../model/Question';\nimport { Component, OnInit } from '@angular/core';\nimport { Team } from '../model/Team';\n\n@Component({\n  selector: 'app-question-grid',\n  templateUrl: './question-grid.component.html',\n  styleUrls: ['./question-grid.component.scss']\n})\nexport class QuestionGridComponent implements OnInit {\n  questionSelected: Question;\n  noOfQestions: number;\n  questions: Question[][] = new Array<Array<Question>>();\n  teams: Team[];\n  event = new Subject<Question>();\n\n  constructor(private teamService: TeamService) { }\n\n  ngOnInit() {\n    this.init();\n\n    this.event.subscribe((question: number | Question) => {\n      if (typeof question === 'number') {\n        if (question === 0) {\n          this.teamService.changeTurn();\n        }\n      } else {\n        this.teamService.answer(question);\n      }\n      this.questionSelected = null;\n      this.noOfQestions = this.teamService.getNumberOfQuestions();\n    });\n  }\n\n  onSelect(question: Question) {\n    if (question.activated) {\n      this.questionSelected = question;\n    }\n  }\n\n  currentTeam(): Team {\n    return this.teamService.getCurrentTeam();\n  }\n\n  resetGame() {\n    this.teamService.reset()\n      .then(\n        () => this.init()\n      );\n    ;\n  }\n\n  init() {\n    this.questionSelected = null;\n    this.noOfQestions = this.teamService.getNumberOfQuestions();\n    this.teams = this.teamService.getTeams();\n    const categories = this.teamService.getCategories();\n    for (let i = 0; i < categories.length; i++) {\n      const cat = categories[i];\n      for (let j = 0; j < cat.questions.length; j++) {\n        if (!this.questions[j]) {\n          this.questions[j] = new Array<Question>();\n        }\n        const question = cat.questions[j];\n        this.questions[j][i] = question;\n      }\n    }\n  }\n\n  completeGame() {\n    this.questionSelected = null;\n    this.noOfQestions = 0;\n  }\n}\n","export default \".question-viewer {\\n  height: 30vh;\\n  font-size: 4.5vh;\\n  display: block;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcXVlc3Rpb24tdmlld2VyL3F1ZXN0aW9uLXZpZXdlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQUE7RUFDQSxnQkFBQTtFQUNBLGNBQUE7QUFDRiIsImZpbGUiOiJzcmMvYXBwL3F1ZXN0aW9uLXZpZXdlci9xdWVzdGlvbi12aWV3ZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucXVlc3Rpb24tdmlld2VyIHtcclxuICBoZWlnaHQ6IDMwdmg7XHJcbiAgZm9udC1zaXplOiA0LjV2aDtcclxuICBkaXNwbGF5OiBibG9jaztcclxufVxyXG4iXX0= */\";","import { Question } from './../model/Question';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Team } from '../model/Team';\n\n@Component({\n  selector: 'app-question-viewer',\n  templateUrl: './question-viewer.component.html',\n  styleUrls: ['./question-viewer.component.scss']\n})\nexport class QuestionViewerComponent implements OnInit {\n  @Input() question: Question;\n  @Input() team: Team;\n  @Input() event: Subject<number | Question>;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onYes() {\n    this.question.activated = false;\n    this.event.next(this.question);\n    this.question = null;\n\n  }\n\n  onNo() {\n    this.question.activated = false;\n    this.event.next(0);\n    this.question = null;\n  }\n}\n","import { Category } from '../model/Category';\nimport { Question } from '../model/Question';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuestionsService {\n\n  constructor(private http: HttpClient) { }\n\n  getQuestionsInCategories(): Observable<Category[]> {\n    return this.http.get<Category[]>('./assets/data/questions.json');\n  }\n\n}\n","import { Category } from '../model/Category';\nimport { Question } from '../model/Question';\nimport { Injectable } from '@angular/core';\nimport { Team } from '../model/Team';\nimport { QuestionsService } from './questions.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamService {\n  teams: Team[];\n  turn: number;\n  numberOfQuestions = 0;\n  categories: Category[];\n\n  constructor(private questionService: QuestionsService) {\n    this.init();\n  }\n\n  private init() {\n    if (!!localStorage.getItem('teams')) {\n      this.categories = JSON.parse(localStorage.getItem('categories'));\n      for (const cat of this.categories) {\n        for (const q of cat.questions) {\n          this.numberOfQuestions += q.activated ? 1 : 0;\n        }\n      }\n      this.teams = JSON.parse(localStorage.getItem('teams'));\n      this.turn = +localStorage.getItem('turn');\n    } else {\n      this.reset();\n    }\n  }\n\n  public reset(): Promise<any> {\n    const p = new Promise((resolve, reject) => {\n      this.teams = [new Team('Team \"Insulin\"'), new Team('Team \"Glucose\"')];\n      this.turn = 0;\n\n      this.questionService.getQuestionsInCategories().subscribe((cats) => {\n        this.numberOfQuestions = 0;\n        this.categories = cats;\n        for (const cat of this.categories) {\n          for (const q of cat.questions) {\n            q.activated = true;\n            this.numberOfQuestions += 1;\n          }\n        }\n        localStorage.setItem('categories', JSON.stringify(this.categories));\n        localStorage.setItem('teams', JSON.stringify(this.teams));\n        localStorage.setItem('turn', this.turn.toString());\n        resolve(true);\n      },\n        error => reject());\n    });\n\n    return p;\n  }\n\n  private saveState() {\n    localStorage.setItem('categories', JSON.stringify(this.categories));\n    localStorage.setItem('teams', JSON.stringify(this.teams));\n    localStorage.setItem('turn', this.turn.toString());\n  }\n\n  public answer(question: Question) {\n    const current = this.teams[this.turn];\n    current.score += question.points;\n\n    const sugar1 = current.sugar;\n\n    if (current.sugar > 6) {\n      current.sugar -= (question.points / 1000);\n    } else {\n      current.sugar -= (question.points / 1500);\n    }\n\n    const sugar2 = current.sugar;\n    if (sugar1 > 7 && sugar2 <= 7) {\n      current.congrats = true;\n    } else {\n      current.congrats = false;\n    }\n\n    if (this.turn === 0) {\n      this.turn = 1;\n    } else {\n      this.turn = 0;\n    }\n    this.numberOfQuestions -= 1;\n    this.saveState();\n  }\n\n  public changeTurn() {\n    if (this.turn === 0) {\n      this.turn = 1;\n    } else {\n      this.turn = 0;\n    }\n    this.numberOfQuestions -= 1;\n    this.saveState();\n  }\n\n  getCurrentTeam(): Team {\n    return this.teams[this.turn];\n  }\n\n  getCategories(): Category[] {\n    return this.categories;\n  }\n\n  getTeams(): Team[] {\n    return this.teams;\n  }\n\n  getNumberOfQuestions(): number {\n    return this.numberOfQuestions;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}